name: Deploy to Cloudflare Workers

on:
  push:
    branches: [ main ]
  repository_dispatch:
    types: [ sanity-content-changed ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build
      env:
        PUBLIC_SANITY_PROJECT_ID: ${{ secrets.SANITY_PROJECT_ID }}
        PUBLIC_SANITY_DATASET: ${{ secrets.SANITY_DATASET }}
        PUBLIC_SANITY_API_VERSION: ${{ secrets.SANITY_API_VERSION }}
        
    - name: Debug secrets
      run: |
        echo "=== DEBUG SECRETS ==="
        echo "CLOUDFLARE_API_TOKEN length: ${#CLOUDFLARE_API_TOKEN}"
        echo "CLOUDFLARE_ACCOUNT_ID length: ${#CLOUDFLARE_ACCOUNT_ID}"
        echo "CLOUDFLARE_ACCOUNT_ID value: $CLOUDFLARE_ACCOUNT_ID"
        echo "===================="
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        
    - name: Verify secrets
      run: |
        echo "Verificando secretos de Cloudflare Workers..."
        if [ -z "$CLOUDFLARE_API_TOKEN" ]; then
          echo "❌ CLOUDFLARE_API_TOKEN no está definido"
          exit 1
        else
          echo "✅ CLOUDFLARE_API_TOKEN está definido (${#CLOUDFLARE_API_TOKEN} caracteres)"
        fi
        
        if [ -z "$CLOUDFLARE_ACCOUNT_ID" ]; then
          echo "❌ CLOUDFLARE_ACCOUNT_ID no está definido"
          exit 1
        else
          echo "✅ CLOUDFLARE_ACCOUNT_ID está definido: $CLOUDFLARE_ACCOUNT_ID"
        fi
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        
    - name: List dist contents
      run: |
        echo "Contenido del directorio dist:"
        ls -la dist/
        
    - name: Setup Wrangler
      run: |
        cd ../workers
        npm install -g wrangler
        
    - name: Deploy to Cloudflare Workers
      run: |
        cd ../workers
        # Usar la configuración específica para el sitio estático
        wrangler deploy --config static-site-wrangler.toml
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
