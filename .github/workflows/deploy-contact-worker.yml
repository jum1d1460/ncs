name: Deploy Persistence Worker

# 🎯 Solo se ejecuta cuando hay cambios en workers/persistence-worker/
on:
  push:
    branches:
      - main          # Deploy a production
    paths:
      - 'workers/persistence-worker/**'
      - '.github/workflows/deploy-contact-worker.yml'  # Si cambia el workflow
  
  # Permitir ejecución manual desde la UI de GitHub
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production

jobs:
  # Job 1: Validar y testear
  validate:
    name: Validate & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: workers/persistence-worker/
      
      - name: 🔧 Install dependencies
        working-directory: workers/persistence-worker
        run: npm ci
      
      - name: ✅ Lint check
        working-directory: workers/persistence-worker
        run: |
          # Agregar scripts de lint si existen
          echo "✓ Dependencies installed successfully"
      
      - name: 📊 Show package info
        working-directory: workers/persistence-worker
        run: |
          echo "Worker version:"
          node -p "require('./package.json').version"
          echo ""
          echo "Dependencies:"
          npm list --depth=0

  # Job 2: Deploy a production (solo si push a main)
  deploy-production:
    name: Deploy to Production
    needs: validate
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event.inputs.environment == 'production'
    environment:
      name: production
      url: https://ncs-deploy.jum1d1460.workers.dev
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: workers/persistence-worker/
      
      - name: 🔧 Install dependencies
        working-directory: workers/persistence-worker
        run: npm ci
      
      - name: 🚀 Deploy to Cloudflare (Production)
        working-directory: workers/persistence-worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: npx wrangler deploy --env production
      
      - name: 🧪 Test deployed worker
        run: |
          echo "Testing production deployment..."
          sleep 5
          
          response=$(curl -s -o /dev/null -w "%{http_code}" https://ncs-deploy.jum1d1460.workers.dev/health)
          
          if [ "$response" -eq 200 ]; then
            echo "✅ Health check passed (HTTP $response)"
          else
            echo "❌ Health check failed (HTTP $response)"
            exit 1
          fi
      
      - name: 📝 Create deployment annotation
        if: success()
        run: |
          echo "::notice title=Deployment Success::Persistence Worker deployed to production successfully"
      
      - name: 🔔 Notify on failure
        if: failure()
        run: |
          echo "::error title=Deployment Failed::Persistence Worker deployment to production failed"

  # Job 3: Notify en Slack/Discord (opcional)
  notify:
    name: Send Notification
    needs: [deploy-production]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: 📊 Deployment Status
        run: |
          echo "Deployment workflow completed"
          echo "Production: ${{ needs.deploy-production.result }}"
      
      # Descomentar y configurar si quieres notificaciones en Slack
      # - name: 📢 Slack Notification
      #   uses: slackapi/slack-github-action@v1
      #   with:
      #     payload: |
      #       {
      #         "text": "Persistence Worker deployed",
      #         "blocks": [
      #           {
      #             "type": "section",
      #             "text": {
      #               "type": "mrkdwn",
      #               "text": "🚀 *Persistence Worker Deployment*\n*Status:* ${{ job.status }}\n*Branch:* ${{ github.ref_name }}\n*Commit:* ${{ github.sha }}"
      #             }
      #           }
      #         ]
      #       }
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
