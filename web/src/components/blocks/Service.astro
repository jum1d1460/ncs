---
import ResponsiveImage from "../ResponsiveImage.astro";

interface ServiceImage {
  asset?: { _ref?: string; url?: string };
  alt?: string;
}

interface NumericRangeOrFixed {
  mode?: 'fixed' | 'range';
  value?: number;
  min?: number;
  max?: number;
  currency?: string;
}

interface ServiceData {
  title?: string;
  duration?: NumericRangeOrFixed;
  price?: NumericRangeOrFixed;
  url?: string;
  weight?: number;
  shortDescription?: string;
  longDescription?: any[];
  cardImage?: ServiceImage;
  blockImage?: ServiceImage;
}

interface Props {
  service?: ServiceData;
  variant?: 'card' | 'detailed';
  showPrice?: boolean;
}

const {
  service = {},
  variant = 'card',
  showPrice = true
} = Astro.props as Props;

function formatDuration(d?: NumericRangeOrFixed): string | null {
  if (!d || !d.mode) return null;
  if (d.mode === 'fixed' && typeof d.value === 'number') return `${d.value} min`;
  if (d.mode === 'range' && typeof d.min === 'number' && typeof d.max === 'number') return `${d.min}–${d.max} min`;
  return null;
}

function formatPrice(p?: NumericRangeOrFixed): string | null {
  if (!p || !p.mode) return null;
  const currency = p.currency || '€';
  if (p.mode === 'fixed' && typeof p.value === 'number') return `${p.value} ${currency}`;
  if (p.mode === 'range' && typeof p.min === 'number' && typeof p.max === 'number') return `${p.min}–${p.max} ${currency}`;
  return null;
}

const durationLabel = formatDuration(service?.duration);
const priceLabel = showPrice ? (formatPrice(service?.price) ?? 'Sin precio') : null;
---

{
  variant === 'card' ? (
    <article class="w-full rounded-lg border border-gray-200 p-4 bg-white shadow-sm">
      {service?.cardImage && (
        <ResponsiveImage image={service.cardImage} alt={service.cardImage?.alt} class="w-full rounded-md mb-4" aspectRatio="4/3" />
      )}
      <h3 class="text-lg font-semibold text-gray-900">
        {service?.url ? (
          <a href={service.url} target="_blank" rel="noopener" class="hover:underline">{service?.title}</a>
        ) : service?.title}
      </h3>
      <div class="mt-1 text-sm text-gray-600 flex gap-3">
        {durationLabel ? <span>{durationLabel}</span> : null}
        {priceLabel ? <span aria-label="precio">{priceLabel}</span> : null}
      </div>
      {service?.shortDescription && (
        <p class="mt-3 text-gray-700 text-sm">{service.shortDescription}</p>
      )}
    </article>
  ) : (
    <section class="w-full grid grid-cols-1 md:grid-cols-2 gap-6 items-start">
      {service?.blockImage && (
        <ResponsiveImage image={service.blockImage} alt={service.blockImage?.alt} class="w-full rounded-md" aspectRatio="16/9" />
      )}
      <div>
        <h3 class="text-2xl font-semibold text-gray-900">
          {service?.url ? (
            <a href={service.url} target="_blank" rel="noopener" class="hover:underline">{service?.title}</a>
          ) : service?.title}
        </h3>
        <div class="mt-2 text-sm text-gray-600 flex gap-3">
          {durationLabel ? <span>{durationLabel}</span> : null}
          {priceLabel ? <span aria-label="precio">{priceLabel}</span> : null}
        </div>
        {service?.longDescription && (
          <div class="prose prose-slate mt-4 max-w-none">
            {service.longDescription.map((block: any) => (
              <p>{block?.children?.map((c: any) => c?.text).join(' ')}</p>
            ))}
          </div>
        )}
      </div>
    </section>
  )
}


