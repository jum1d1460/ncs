---
import BlockContent from '../BlockContent.astro'
import ResponsiveImage from '../ResponsiveImage.astro'

interface Props {
  title?: string
  headingLevel?: string
  content?: any[]
  image?: any
  imageAlt?: string
  imagePosition?: 'left' | 'right'
  imageWidth?: '25' | '33' | '50'
  columnsCount?: number
}

const { 
  title, 
  headingLevel, 
  content, 
  image, 
  imageAlt, 
  imagePosition = 'right', 
  imageWidth = '50',
  columnsCount = 1 
} = Astro.props as Props

const Tag = (title && (headingLevel as any)) || 'h2'
const imageWidthClass = imageWidth === '25' ? 'w-1/4' : imageWidth === '33' ? 'w-1/3' : 'w-1/2'
const textWidthClass = imageWidth === '25' ? 'w-3/4' : imageWidth === '33' ? 'w-2/3' : 'w-1/2'
const columnsClass = columnsCount === 2 ? 'md:columns-2' : columnsCount === 3 ? 'md:columns-3' : ''
---

<section class="py-12 px-4 max-w-6xl mx-auto">
  <div class="flex flex-col gap-8">
    {title && (
      <div class="text-center">
        <Tag class="text-3xl font-bold text-gray-900 mb-4">{title}</Tag>
      </div>
    )}
    
    {image && content ? (
      <div class={`flex flex-col ${imagePosition === 'right' ? 'lg:flex-row' : 'lg:flex-row-reverse'} gap-8 items-start`}>
        <div class={`${textWidthClass} ${columnsClass}`}>
          <BlockContent content={content} />
        </div>
        <div class={`${imageWidthClass} flex-shrink-0`}>
          <ResponsiveImage 
            image={image} 
            alt={imageAlt || ''} 
            class="rounded-lg shadow-lg"
          />
        </div>
      </div>
    ) : image ? (
      <div class="flex justify-center">
        <div class={`${imageWidthClass} max-w-md`}>
          <ResponsiveImage 
            image={image} 
            alt={imageAlt || ''} 
            class="rounded-lg shadow-lg"
          />
        </div>
      </div>
    ) : content ? (
      <div class={`${columnsClass}`}>
        <BlockContent content={content} />
      </div>
    ) : null}
  </div>
</section>


