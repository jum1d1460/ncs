---
interface PaginationProps {
  currentPage: number;
  totalPages: number;
  baseUrl: string;
}

const { currentPage, totalPages, baseUrl } = Astro.props as PaginationProps;

// Función para generar los números de página a mostrar
const getPageNumbers = () => {
  const pages = [];
  const maxVisiblePages = 5;
  
  if (totalPages <= maxVisiblePages) {
    // Si hay pocas páginas, mostrar todas
    for (let i = 1; i <= totalPages; i++) {
      pages.push(i);
    }
  } else {
    // Lógica para mostrar páginas con elipsis
    if (currentPage <= 3) {
      // Páginas iniciales
      for (let i = 1; i <= 4; i++) {
        pages.push(i);
      }
      pages.push('...');
      pages.push(totalPages);
    } else if (currentPage >= totalPages - 2) {
      // Páginas finales
      pages.push(1);
      pages.push('...');
      for (let i = totalPages - 3; i <= totalPages; i++) {
        pages.push(i);
      }
    } else {
      // Páginas del medio
      pages.push(1);
      pages.push('...');
      for (let i = currentPage - 1; i <= currentPage + 1; i++) {
        pages.push(i);
      }
      pages.push('...');
      pages.push(totalPages);
    }
  }
  
  return pages;
};

const pageNumbers = getPageNumbers();
---

{totalPages > 1 && (
  <nav class="flex items-center justify-center space-x-2 mt-12" aria-label="Paginación del blog">
    <!-- Botón Anterior -->
    {currentPage > 1 ? (
      <a 
        href={currentPage === 2 ? baseUrl : `${baseUrl}/page/${currentPage - 1}`}
        class="flex items-center px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 hover:text-gray-700 transition-colors"
        aria-label="Página anterior"
      >
        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
        Anterior
      </a>
    ) : (
      <span class="flex items-center px-3 py-2 text-sm font-medium text-gray-300 bg-gray-100 border border-gray-200 rounded-lg cursor-not-allowed">
        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
        Anterior
      </span>
    )}

    <!-- Números de página -->
    <div class="flex space-x-1">
      {pageNumbers.map((page) => {
        if (page === '...') {
          return (
            <span class="px-3 py-2 text-sm font-medium text-gray-500">
              ...
            </span>
          );
        }
        
        const isCurrentPage = page === currentPage;
        const href = page === 1 ? baseUrl : `${baseUrl}/page/${page}`;
        
        return (
          <a
            href={href}
            class={`px-3 py-2 text-sm font-medium rounded-lg transition-colors ${
              isCurrentPage
                ? 'bg-blue-600 text-white'
                : 'text-gray-700 bg-white border border-gray-300 hover:bg-gray-50 hover:text-gray-900'
            }`}
            aria-label={`Página ${page}`}
            aria-current={isCurrentPage ? 'page' : undefined}
          >
            {page}
          </a>
        );
      })}
    </div>

    <!-- Botón Siguiente -->
    {currentPage < totalPages ? (
      <a 
        href={`${baseUrl}/page/${currentPage + 1}`}
        class="flex items-center px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 hover:text-gray-700 transition-colors"
        aria-label="Página siguiente"
      >
        Siguiente
        <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </a>
    ) : (
      <span class="flex items-center px-3 py-2 text-sm font-medium text-gray-300 bg-gray-100 border border-gray-200 rounded-lg cursor-not-allowed">
        Siguiente
        <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </span>
    )}
  </nav>
)}

<!-- Información de paginación -->
<div class="text-center mt-6 text-sm text-gray-600">
  Mostrando página {currentPage} de {totalPages}
</div>
