---
import { Menu, X, Phone, MessageCircle } from 'lucide-astro'

interface NavItem { label?: string; url?: string; target?: string; page?: { slug?: { current?: string } } }
interface Props {
  logoUrl?: string | null
  logoAlt?: string | null
  navMain?: NavItem[]
  phone?: string | null
  whatsapp?: string | null
  bookingUrl?: string | null
}
const { logoUrl, logoAlt, navMain = [], phone, whatsapp, bookingUrl } = Astro.props as Props
---

<!-- Header principal -->
<header id="site-header" class="hidden md:block fixed top-0 left-0 right-0 z-[9999] transition-transform duration-300 will-change-transform">
  <div class="mx-auto max-w-7xl px-4 py-3">
    <div class="relative header-shell isolate z-[9999]">
      <div class="absolute inset-0 rounded-2xl bg-white shadow-[0_12px_40px_-18px_rgba(0,0,0,0.35),0_0_1px_rgba(0,0,0,0.06)] ring-1 ring-black/5" aria-hidden="true"></div>
      <div class="relative flex items-center justify-between gap-4 px-5 py-3 rounded-2xl">
        <!-- Logo -->
        <a href="/" class="flex items-center gap-2">
          {logoUrl && <img src={logoUrl} alt={logoAlt ?? ''} class="h-8 w-auto" />}
          {!logoUrl && <span class="font-semibold">NCS</span>}
        </a>

        <!-- Navegación desktop -->
        <nav aria-label="Principal" class="hidden md:flex items-center gap-8 ml-8">
          {navMain?.map((item) => {
            const href = item.url && item.url.trim().length > 0 
              ? item.url 
              : (item.page?.slug?.current ? `/${item.page.slug.current}` : '#')
            const target = item.target ?? (href.startsWith('http') ? '_blank' : '_self')
            return (
              <a href={href} target={target} rel={target === '_blank' ? 'noopener noreferrer' : undefined} class="nav-link text-responsive-small font-medium text-gray-700 hover:text-indigo-600 transition-all duration-300 ease-in-out relative group">
                <span class="relative z-10">{item.label}</span>
                <span class="absolute bottom-0 left-0 w-0 h-0.5 bg-gradient-to-r from-indigo-600 to-purple-600 transition-all duration-300 ease-in-out group-hover:w-full"></span>
              </a>
            )
          })}
        </nav>

        <!-- Botones desktop -->
        <div class="hidden md:flex items-center gap-3">
          {phone && (
            <a href={`tel:${phone}`} aria-label="Llamar" class="contact-btn p-2 rounded-lg text-gray-700 hover:text-blue-600 hover:bg-blue-50 transition-all duration-300 ease-in-out transform hover:scale-110">
              <Phone class="h-5 w-5" />
            </a>
          )}
          {whatsapp && (
            <a href={`https://wa.me/${whatsapp}`} aria-label="WhatsApp" class="contact-btn p-2 rounded-lg text-green-600 hover:text-green-700 hover:bg-green-50 transition-all duration-300 ease-in-out transform hover:scale-110">
              <MessageCircle class="h-5 w-5" />
            </a>
          )}
          <a href={bookingUrl ?? '#'} class="booking-btn px-4 py-2 text-responsive-small font-medium rounded-lg bg-gradient-to-r from-indigo-600 to-purple-600 text-white hover:from-indigo-700 hover:to-purple-700 hover:shadow-lg hover:shadow-indigo-500/25 transition-all duration-300 ease-in-out transform hover:scale-105">Pedir cita</a>
        </div>
      </div>
    </div>
  </div>
</header>

<!-- Botón hamburguesa móvil sticky -->
<button id="mobile-menu-button" class="fixed top-4 right-4 z-[10000] md:hidden p-3 rounded-full bg-white shadow-lg text-gray-700 hover:text-indigo-600 hover:bg-indigo-50 transition-all duration-300 ease-in-out transform hover:scale-110" aria-label="Abrir menú">
  <Menu class="h-6 w-6" />
</button>

<!-- Overlay del menú móvil -->
<div id="mobile-menu-overlay" class="fixed inset-0 bg-black bg-opacity-50 z-[10000] hidden md:hidden"></div>

<!-- Drawer del menú móvil -->
<div id="mobile-menu-drawer" class="fixed top-0 right-0 h-full w-80 max-w-[85vw] bg-white shadow-xl z-[10001] transform translate-x-full transition-transform duration-300 ease-in-out md:hidden">
  <div class="flex flex-col h-full">
    <!-- Header del drawer -->
    <div class="flex items-center justify-between p-4 border-b">
      <a href="/" class="flex items-center gap-2">
        {logoUrl && <img src={logoUrl} alt={logoAlt ?? ''} class="h-8 w-auto" />}
        {!logoUrl && <span class="font-semibold">NCS</span>}
      </a>
      <button id="mobile-menu-close" class="p-2 rounded-md text-gray-700 hover:text-gray-900" aria-label="Cerrar menú">
        <X class="h-6 w-6" />
      </button>
    </div>

    <!-- Navegación móvil -->
    <nav class="flex-1 p-4" aria-label="Navegación móvil">
      <ul class="space-y-2">
        {navMain?.map((item) => {
          const href = item.url && item.url.trim().length > 0 
            ? item.url 
            : (item.page?.slug?.current ? `/${item.page.slug.current}` : '#')
          const target = item.target ?? (href.startsWith('http') ? '_blank' : '_self')
          return (
            <li>
              <a href={href} target={target} rel={target === '_blank' ? 'noopener noreferrer' : undefined} class="mobile-nav-link block py-4 px-4 text-responsive-body font-medium text-gray-700 hover:text-indigo-600 hover:bg-indigo-50 rounded-lg transition-all duration-300 ease-in-out transform hover:scale-105 border-b border-gray-100 last:border-b-0">
                <span class="relative z-10">{item.label}</span>
                <span class="absolute left-0 top-0 w-1 h-full bg-gradient-to-b from-indigo-600 to-purple-600 transform scale-y-0 transition-transform duration-300 ease-in-out group-hover:scale-y-100"></span>
              </a>
            </li>
          )
        })}
      </ul>
    </nav>

    <!-- Footer del drawer con contactos -->
    <div class="p-4 border-t bg-gray-50">
      <div class="flex gap-3 mb-4">
        {phone && (
          <a href={`tel:${phone}`} class="mobile-contact-btn flex items-center gap-2 px-4 py-3 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-lg hover:from-blue-700 hover:to-blue-800 hover:shadow-lg hover:shadow-blue-500/25 transition-all duration-300 ease-in-out transform hover:scale-105 font-medium">
            <Phone class="h-5 w-5" />
            <span>Llamar</span>
          </a>
        )}
        {whatsapp && (
          <a href={`https://wa.me/${whatsapp}`} class="mobile-contact-btn flex items-center gap-2 px-4 py-3 bg-gradient-to-r from-green-600 to-green-700 text-white rounded-lg hover:from-green-700 hover:to-green-800 hover:shadow-lg hover:shadow-green-500/25 transition-all duration-300 ease-in-out transform hover:scale-105 font-medium">
            <MessageCircle class="h-5 w-5" />
            <span>WhatsApp</span>
          </a>
        )}
      </div>
      <a href={bookingUrl ?? '#'} class="mobile-booking-btn block w-full text-center px-4 py-4 bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded-lg hover:from-indigo-700 hover:to-purple-700 hover:shadow-lg hover:shadow-indigo-500/25 font-medium transition-all duration-300 ease-in-out transform hover:scale-105">Pedir cita</a>
    </div>
  </div>
</div>


<script>
  if (typeof window !== 'undefined') {
    // Elementos del header
    const headerEl = document.getElementById('site-header');
    const hero = document.querySelector('.hero-section');
    const sentinel = document.querySelector('.hero-sentinel');
    
    // Elementos del menú móvil
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenuClose = document.getElementById('mobile-menu-close');
    const mobileMenuOverlay = document.getElementById('mobile-menu-overlay');
    const mobileMenuDrawer = document.getElementById('mobile-menu-drawer');

    if (!headerEl) { console.warn('[Header] header not found'); }

    // Funcionalidad del menú móvil
    function openMobileMenu() {
      if (mobileMenuOverlay && mobileMenuDrawer) {
        mobileMenuOverlay.classList.remove('hidden');
        mobileMenuDrawer.classList.remove('translate-x-full');
        document.body.style.overflow = 'hidden';
      }
    }

    function closeMobileMenu() {
      if (mobileMenuOverlay && mobileMenuDrawer) {
        mobileMenuOverlay.classList.add('hidden');
        mobileMenuDrawer.classList.add('translate-x-full');
        document.body.style.overflow = '';
      }
    }

    // Event listeners para el menú móvil
    if (mobileMenuButton) {
      mobileMenuButton.addEventListener('click', openMobileMenu);
    }
    
    if (mobileMenuClose) {
      mobileMenuClose.addEventListener('click', closeMobileMenu);
    }
    
    if (mobileMenuOverlay) {
      mobileMenuOverlay.addEventListener('click', closeMobileMenu);
    }

    // Cerrar menú al hacer clic en enlaces
    const mobileMenuLinks = mobileMenuDrawer?.querySelectorAll('a');
    mobileMenuLinks?.forEach(link => {
      link.addEventListener('click', closeMobileMenu);
    });

    // Cerrar menú con tecla Escape
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        closeMobileMenu();
      }
    });

    // Funcionalidad del header sticky (solo desktop)
    let lastY = window.scrollY;
    let pastHero = false;
    const THRESH = 6; // umbral de píxeles para detectar intención clara
    
    function showHeader(y:number, delta:number, reason:string) {
      if (headerEl && (headerEl as HTMLElement).classList.contains('-translate-y-[120%]')) {
        console.log('[Header] SHOW', { y, delta, pastHero, reason });
      }
      if (headerEl) (headerEl as HTMLElement).classList.remove('-translate-y-[120%]');
    }
    
    function hideHeader(y:number, delta:number, reason:string) {
      if (headerEl && !(headerEl as HTMLElement).classList.contains('-translate-y-[120%]')) {
        console.log('[Header] HIDE', { y, delta, pastHero, reason });
      }
      if (headerEl) (headerEl as HTMLElement).classList.add('-translate-y-[120%]');
    }
    
    // Solo configurar sticky header en desktop
    if (window.innerWidth >= 768) {
      if (sentinel) {
        const observer = new IntersectionObserver(
          (entries) => {
            entries.forEach((entry) => {
              pastHero = !entry.isIntersecting;
              console.log('[Header] Sentinel intersect:', { isIntersecting: entry.isIntersecting, pastHero });
            });
          },
          { root: null, threshold: 0 }
        );
        observer.observe(sentinel as Element);
      } else if (hero) {
        pastHero = (window.scrollY || 0) > ((hero as HTMLElement).offsetTop + (hero as HTMLElement).offsetHeight - 1);
        console.log('[Header] Fallback pastHero:', { pastHero });
      }
      
      const onScroll = () => {
        const y = window.scrollY;
        const delta = y - lastY;
        lastY = y;
        if (!pastHero || !headerEl) {
          showHeader(y, delta, 'inside-hero');
          return;
        }
        if (delta > THRESH) {
          hideHeader(y, delta, 'scrolling-down');
        } else if (delta < -THRESH) {
          showHeader(y, delta, 'scrolling-up');
        }
      };
      
      window.addEventListener('scroll', onScroll, { passive: true });
    }
  }
</script>


