---
interface NavItem { label?: string; url?: string; target?: string; page?: { slug?: { current?: string } } }
interface Props {
  logoUrl?: string | null
  logoAlt?: string | null
  navMain?: NavItem[]
  phone?: string | null
  whatsapp?: string | null
  bookingUrl?: string | null
}
const { logoUrl, logoAlt, navMain = [], phone, whatsapp, bookingUrl } = Astro.props as Props
---

<header id="site-header" class="fixed top-0 left-0 right-0 z-[9999] transition-transform duration-300 will-change-transform">
  <div class="mx-auto max-w-7xl px-4 py-3">
    <div class="relative header-shell isolate z-[9999]">
      <div class="absolute inset-0 rounded-2xl bg-white shadow-[0_12px_40px_-18px_rgba(0,0,0,0.35),0_0_1px_rgba(0,0,0,0.06)] ring-1 ring-black/5" aria-hidden="true"></div>
      <div class="relative flex items-center justify-between gap-4 px-5 py-3 rounded-2xl">
        <a href="/" class="flex items-center gap-2">
          {logoUrl && <img src={logoUrl} alt={logoAlt ?? ''} class="h-8 w-auto" />}
          {!logoUrl && <span class="font-semibold">NCS</span>}
        </a>
        <nav aria-label="Principal" class="hidden md:flex items-center gap-6">
          {navMain?.map((item) => {
            const href = item.url && item.url.trim().length > 0 
              ? item.url 
              : (item.page?.slug?.current ? `/${item.page.slug.current}` : '#')
            const target = item.target ?? (href.startsWith('http') ? '_blank' : '_self')
            return (
              <a href={href} target={target} rel={target === '_blank' ? 'noopener noreferrer' : undefined} class="text-sm text-gray-700 hover:text-gray-900">{item.label}</a>
            )
          })}
        </nav>
        <div class="hidden md:flex items-center gap-3">
          {phone && (
            <a href={`tel:${phone}`} aria-label="Llamar" class="p-2 rounded-md text-gray-700 hover:text-gray-900">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-5 w-5"><path d="M2.25 6.75c0-2.071 1.679-3.75 3.75-3.75h.443c.847 0 1.61.53 1.874 1.333l.716 2.147a2.25 2.25 0 01-.52 2.31l-1.21 1.21a.75.75 0 00-.154.82c.78 1.676 2.065 2.961 3.741 3.741a.75.75 0 00.82-.154l1.21-1.21a2.25 2.25 0 012.31-.52l2.147.716c.804.264 1.333 1.027 1.333 1.874v.444a3.75 3.75 0 01-3.75 3.75h-.75C8.246 20.25 3.75 15.754 3.75 10.5v-.75z"/></svg>
            </a>
          )}
          {whatsapp && (
            <a href={`https://wa.me/${whatsapp}`} aria-label="WhatsApp" class="p-2 rounded-md text-green-600 hover:text-green-700">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-5 w-5"><path d="M20.52 3.48A11.94 11.94 0 0012.06 0C5.45 0 .1 5.34.1 11.95c0 2.11.55 4.08 1.51 5.8L0 24l6.4-1.55a11.8 11.8 0 005.67 1.45h.01c6.61 0 11.96-5.34 11.96-11.95 0-3.2-1.25-6.21-3.52-8.47zM12.08 21.2h-.01a9.9 9.9 0 01-5.05-1.38l-.36-.22-3.8.92.99-3.7-.24-.38a9.93 9.93 0 01-1.52-5.3c0-5.48 4.46-9.94 9.95-9.94 2.65 0 5.14 1.03 7.01 2.9a9.87 9.87 0 012.92 7.03c0 5.48-4.47 9.95-9.95 9.95zm5.46-7.42c-.3-.15-1.77-.87-2.04-.97-.27-.1-.46-.15-.65.15-.2.3-.75.97-.92 1.18-.17.2-.34.22-.64.07-.3-.15-1.25-.46-2.39-1.47-.88-.78-1.47-1.75-1.64-2.05-.17-.3-.02-.46.13-.61.13-.13.3-.34.44-.51.15-.17.2-.29.3-.49.1-.2.05-.37-.02-.52-.07-.15-.65-1.56-.89-2.13-.23-.56-.47-.49-.65-.5l-.55-.01c-.2 0-.52.07-.79.37-.27.3-1.04 1.02-1.04 2.49 0 1.47 1.07 2.9 1.22 3.1.15.2 2.1 3.2 5.08 4.49.71.31 1.27.49 1.7.63.72.23 1.38.2 1.9.12.58-.09 1.77-.72 2.02-1.41.25-.69.25-1.28.18-1.41-.07-.13-.27-.2-.57-.35z"/></svg>
            </a>
          )}
          <a href={bookingUrl ?? '#'} class="px-3 py-2 text-sm rounded-md bg-indigo-600 text-white hover:bg-indigo-700">Pedir cita</a>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  if (typeof window !== 'undefined') {
    const headerEl = document.getElementById('site-header');
    const hero = document.querySelector('.hero-section');
    const sentinel = document.querySelector('.hero-sentinel');
    if (!headerEl) { console.warn('[Header] header not found'); }
    let lastY = window.scrollY;
    let pastHero = false;
    const THRESH = 6; // umbral de píxeles para detectar intención clara
    function showHeader(y:number, delta:number, reason:string) {
      if (headerEl && (headerEl as HTMLElement).classList.contains('-translate-y-[120%]')) {
        console.log('[Header] SHOW', { y, delta, pastHero, reason });
      }
      if (headerEl) (headerEl as HTMLElement).classList.remove('-translate-y-[120%]');
    }
    function hideHeader(y:number, delta:number, reason:string) {
      if (headerEl && !(headerEl as HTMLElement).classList.contains('-translate-y-[120%]')) {
        console.log('[Header] HIDE', { y, delta, pastHero, reason });
      }
      if (headerEl) (headerEl as HTMLElement).classList.add('-translate-y-[120%]');
    }
    if (sentinel) {
      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            pastHero = !entry.isIntersecting;
            console.log('[Header] Sentinel intersect:', { isIntersecting: entry.isIntersecting, pastHero });
          });
        },
        { root: null, threshold: 0 }
      );
      observer.observe(sentinel as Element);
    } else if (hero) {
      pastHero = (window.scrollY || 0) > ((hero as HTMLElement).offsetTop + (hero as HTMLElement).offsetHeight - 1);
      console.log('[Header] Fallback pastHero:', { pastHero });
    }
    const onScroll = () => {
      const y = window.scrollY;
      const delta = y - lastY;
      lastY = y;
      if (!pastHero || !headerEl) {
        showHeader(y, delta, 'inside-hero');
        return;
      }
      if (delta > THRESH) {
        hideHeader(y, delta, 'scrolling-down');
      } else if (delta < -THRESH) {
        showHeader(y, delta, 'scrolling-up');
      }
    };
    window.addEventListener('scroll', onScroll, { passive: true });
  }
</script>


