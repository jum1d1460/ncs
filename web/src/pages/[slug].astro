---
import Layout from '../layouts/Layout.astro';
import { sanityClient, fetchGlobalSettings } from "../lib/sanityClient";
import {buildLayoutProps} from "../lib/head";
import PageRenderer from "../components/PageRenderer.astro";

export async function getStaticPaths() {
    try {
        const pages = await sanityClient.fetch(`
            *[_type == "page" && slug.current != "inicio"] {
                slug,
                title,
                blocks[]{
                    'backgroundColor': coalesce(backgroundColor, 'none'),
                    'backgroundLayout': coalesce(backgroundLayout, 'grid'),
                    'contentLayout': coalesce(contentLayout, 'grid'),
                    _type,
                    ...,
                    _type == "serviceBlock" => {
                      "service": service->{
                        title,
                        duration,
                        price,
                        url,
                        weight,
                        shortDescription,
                        longDescription,
                        cardImage{..., asset->{_ref, url}},
                        blockImage{..., asset->{_ref, url}}
                      },
                      variant,
                      showPrice
                    },
                    _type == "serviceCarousel" => {
                      "items": items[]->{
                        title,
                        duration,
                        price,
                        url,
                        weight,
                        shortDescription,
                        longDescription,
                        cardImage{..., asset->{_ref, url}},
                        blockImage{..., asset->{_ref, url}}
                      } | order(coalesce(weight, 100) asc, title asc),
                      autoplay,
                      intervalMs,
                      showPrice
                    },
                    _type == "blockTestimonials" => {
                      "items": items[]{
                        image{..., asset->{_ref, url}, alt},
                        quote,
                        fullName
                      }
                    },
                    _type == "blockLogos" => {
                      title,
                      logos[]{..., asset->{_ref, url}, alt}
                    }
                }
            }
        `);

        return pages.map((page: { slug: { current: string }, title: string, blocks: any[] }) => ({
            params: { slug: page.slug.current },
            props: { page }
        }));
    } catch (_err) {
        return [];
    }
}

interface CmsPage {
    title?: string;
    blocks?: any[];
}

const { page } = Astro.props as { page: CmsPage };
const settings = await fetchGlobalSettings();
const layoutProps = buildLayoutProps(page, settings);
---

<Layout {...layoutProps}>
  <PageRenderer blocks={page?.blocks} />
</Layout>