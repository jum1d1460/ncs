---
import Layout from '../layouts/Layout.astro';
import { sanityClient, fetchGlobalSettings } from "../lib/sanityClient";
import {buildLayoutProps} from "../lib/head";
import PageRenderer from "../components/PageRenderer.astro";

// Obtener la pÃ¡gina de inicio desde Sanity (tolerante a errores)
let inicioPage: any = null;
try {
    inicioPage = await sanityClient.fetch(`
        *[_type == "page" && slug.current == "inicio"][0]{
            title,
            blocks[]{
                'backgroundColor': coalesce(backgroundColor, 'none'),
                'backgroundLayout': coalesce(backgroundLayout, 'grid'),
                'contentLayout': coalesce(contentLayout, 'grid'),
                _type,
                ...,
                _type == "serviceBlock" => {
                  "service": service->{
                    title,
                    duration,
                    price,
                    url,
                    weight,
                    shortDescription,
                    longDescription,
                    cardImage{..., asset->{_ref, url}},
                    blockImage{..., asset->{_ref, url}}
                  },
                  variant,
                  showPrice
                },
                _type == "serviceCarousel" => {
                  "items": items[]->{
                    title,
                    duration,
                    price,
                    url,
                    weight,
                    shortDescription,
                    longDescription,
                    cardImage{..., asset->{_ref, url}},
                    blockImage{..., asset->{_ref, url}}
                  } | order(coalesce(weight, 100) asc, title asc),
                  autoplay,
                  intervalMs,
                  showPrice
                },
                _type == "blockTestimonials" => {
                  "items": items[]{
                    image{..., asset->{_ref, url}, alt},
                    quote,
                    fullName
                  }
                },
                _type == "blockLogos" => {
                  title,
                  logos[]{..., asset->{_ref, url}, alt}
                }
            }
        }
    `);
} catch (_err) {
    inicioPage = null;
}

const page = inicioPage || {
    title: "Inicio",
    blocks: []
};

const settings = await fetchGlobalSettings();
const layoutProps = buildLayoutProps(page, settings);
---

<Layout {...layoutProps}>
  <PageRenderer blocks={page.blocks} />
</Layout>
